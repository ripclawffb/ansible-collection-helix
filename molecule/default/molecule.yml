---
dependency:
  name: galaxy
  enabled: False
  options:
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  # - name: centos7-20.2
  #   dockerfile: Dockerfile.centos.7-20.2.j2
  #   image: centos:7-20.2
  #   command: '-r .'
  # - name: centos7-21.2
  #   dockerfile: Dockerfile.centos.7-21.2.j2
  #   image: centos:7-21.2
  #   command: '-r .'
  # - name: centos7-22.1
  #   dockerfile: Dockerfile.centos.7-22.1.j2
  #   image: centos:7-22.1
  #   command: '-r .'
  # - name: centos7-22.2
  #   dockerfile: Dockerfile.centos.7-22.2.j2
  #   image: centos:7-22.2
  #   command: '-r .'
  # - name: centos7-23.1
  #   dockerfile: Dockerfile.centos.7-23.1.j2
  #   image: centos:7-23.1
  #   command: '-r .'
  # - name: centos7-23.2
  #   dockerfile: Dockerfile.centos.7-23.2.j2
  #   image: centos:7-23.2
  #   command: '-r .'
  - name: rockylinux8-22.1
    dockerfile: Dockerfile.rockylinux.8-22.1.j2
    image: rockylinux.8-22.1
    command: '-r .'
  - name: rockylinux8-22.2
    dockerfile: Dockerfile.rockylinux.8-22.2.j2
    image: rockylinux.8-22.2
    command: '-r .'
  - name: rockylinux8-23.1
    dockerfile: Dockerfile.rockylinux.8-23.1.j2
    image: rockylinux.8-23.1
    command: '-r .'
  - name: rockylinux8-23.2
    dockerfile: Dockerfile.rockylinux.8-23.2.j2
    image: rockylinux.8-23.2
    command: '-r .'
  - name: rockylinux9-22.1
    dockerfile: Dockerfile.rockylinux.9-22.1.j2
    image: rockylinux.9-22.1
    command: '-r .'
  - name: rockylinux9-22.2
    dockerfile: Dockerfile.rockylinux.9-22.2.j2
    image: rockylinux.9-22.2
    command: '-r .'
  - name: rockylinux9-23.1
    dockerfile: Dockerfile.rockylinux.9-23.1.j2
    image: rockylinux.9-23.1
    command: '-r .'
  - name: rockylinux9-23.2
    dockerfile: Dockerfile.rockylinux.9-23.2.j2
    image: rockylinux.9-23.2
    command: '-r .'
  # - name: ubuntu1804-20.2
  #   dockerfile: Dockerfile.ubuntu.18.04-20.2.j2
  #   image: ubuntu:18.04-20.2
  #   command: '-r .'
  # - name: ubuntu1804-21.2
  #   dockerfile: Dockerfile.ubuntu.18.04-21.2.j2
  #   image: ubuntu:18.04-21.2
  #   command: '-r .'
  # - name: ubuntu1804-22.1
  #   dockerfile: Dockerfile.ubuntu.18.04-22.1.j2
  #   image: ubuntu:18.04-22.1
  #   command: '-r .'
  # - name: ubuntu1804-22.2
  #   dockerfile: Dockerfile.ubuntu.18.04-22.2.j2
  #   image: ubuntu:18.04-22.2
  #   command: '-r .'
  # - name: ubuntu1804-23.1
  #   dockerfile: Dockerfile.ubuntu.18.04-23.1.j2
  #   image: ubuntu:18.04-23.1
  #   command: '-r .'
  # - name: ubuntu1804-23.2
  #   dockerfile: Dockerfile.ubuntu.18.04-23.2.j2
  #   image: ubuntu:18.04-23.2
  #   command: '-r .'
  - name: ubuntu2004-20.2
    dockerfile: Dockerfile.ubuntu.20.04-20.2.j2
    image: ubuntu:20.04-20.2
    command: '-r .'
  - name: ubuntu2004-21.2
    dockerfile: Dockerfile.ubuntu.20.04-21.2.j2
    image: ubuntu:20.04-21.2
    command: '-r .'
  - name: ubuntu2004-22.1
    dockerfile: Dockerfile.ubuntu.20.04-22.1.j2
    image: ubuntu:20.04-22.1
    command: '-r .'
  - name: ubuntu2004-22.2
    dockerfile: Dockerfile.ubuntu.20.04-22.2.j2
    image: ubuntu:20.04-22.2
    command: '-r .'
  - name: ubuntu2004-23.1
    dockerfile: Dockerfile.ubuntu.20.04-23.1.j2
    image: ubuntu:20.04-23.1
    command: '-r .'
  - name: ubuntu2004-23.2
    dockerfile: Dockerfile.ubuntu.20.04-23.2.j2
    image: ubuntu:20.04-23.2
    command: '-r .'
  - name: ubuntu2204-22.1
    dockerfile: Dockerfile.ubuntu.22.04-22.1.j2
    image: ubuntu:22.04-22.1
    command: '-r .'
  - name: ubuntu2204-22.2
    dockerfile: Dockerfile.ubuntu.22.04-22.2.j2
    image: ubuntu:22.04-22.2
    command: '-r .'
  - name: ubuntu2204-23.1
    dockerfile: Dockerfile.ubuntu.22.04-23.1.j2
    image: ubuntu:22.04-23.1
    command: '-r .'
  - name: ubuntu2204-23.2
    dockerfile: Dockerfile.ubuntu.22.04-23.2.j2
    image: ubuntu:22.04-23.2
    command: '-r .'
  # - name: ubuntu2404-22.1
  #   dockerfile: Dockerfile.ubuntu.24.04-22.1.j2
  #   image: ubuntu:24.04-22.1
  #   command: '-r .'
provisioner:
  name: ansible
  log: true
  # options:
  #   vvv: true
  env:
    ANSIBLE_COLLECTIONS_PATHS: "/home/runner/work/ansible-collection-helix-core/ansible-collection-helix-core:~/.ansible/collections"
  inventory:
    group_vars:
      all:
        ansible_python_interpreter: "/usr/bin/python3"
scenario:
  name: default
  test_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - side_effect
    - destroy
# lint: |
#   set -e
#   yamllint .
#   ansible-lint
#   flake8
