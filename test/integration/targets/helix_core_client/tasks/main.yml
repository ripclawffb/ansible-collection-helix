# Test code for the Helix client module
# -*- coding: utf-8 -*-

# Copyright: (c) 2019, Asif Shaikh (@ripclawffb) <ripclaw_ffb@hotmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# - name: Install required lib
#   pip:
#     name: p4python
#     executable: pip3

- name: Create new client
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_client

- name: Output create_client
  debug:
    var: create_client

- name: Verify create_client is changed
  assert:
    that:
      - create_client is changed

- name: Create new client (idempotent)
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_client_idempotent

- name: Output create_client_idempotent
  debug:
    var: create_client_idempotent

- name: Verify create_client_idempotent is not changed
  assert:
    that:
      - create_client_idempotent is not changed

- name: Update client
  helix_core_client:
    state: present
    name: bruno_new_client
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: update_client

- name: Output update_client
  debug:
    var: update_client

- name: Verify update_client is changed
  assert:
    that:
      - update_client is changed

- name: Update client (idempotent)
  helix_core_client:
    state: present
    name: bruno_new_client
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: update_client_idempotent

- name: Output update_client_idempotent
  debug:
    var: update_client_idempotent

- name: Verify update_client_idempotent is not changed
  assert:
    that:
      - update_client_idempotent is not changed

- name: Delete a client
  helix_core_client:
    state: absent
    name: bruno_new_client
    view: []
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_client

- name: Output delete_client
  debug:
    var: delete_client

- name: Verify delete_client is changed
  assert:
    that:
      - delete_client is changed

- name: Delete a client (idempotent)
  helix_core_client:
    state: absent
    name: bruno_new_client
    view: []
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_client_idempotent

- name: Output delete_client_idempotent
  debug:
    var: delete_client_idempotent

- name: Verify delete_client_idempotent is not changed
  assert:
    that:
      - delete_client_idempotent is not changed

- name: Create new client (check mode)
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_client_check_mode
  check_mode: true

- name: Output create_client_check_mode
  debug:
    var: create_client_check_mode

- name: Verify create_client_check_mode is changed
  assert:
    that:
      - create_client_check_mode is changed

- name: Create new client (confirm check mode)
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_client_check_mode_confirm

- name: Output create_client_check_mode_confirm
  debug:
    var: create_client_check_mode_confirm

- name: Verify create_client_check_mode_confirm is changed
  assert:
    that:
      - create_client_check_mode_confirm is changed

- name: Delete client (check mode)
  helix_core_client:
    state: absent
    name: bruno_new_client
    view: []
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_client_check_mode
  check_mode: true

- name: Output delete_client_check_mode
  debug:
    var: delete_client_check_mode

- name: Verify delete_client_check_mode is changed
  assert:
    that:
      - delete_client_check_mode is changed

- name: Delete client (confirm check mode)
  helix_core_client:
    state: absent
    name: bruno_new_client
    view: []
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_client_check_mode_confirm

- name: Output delete_client_check_mode_confirm
  debug:
    var: delete_client_check_mode_confirm

- name: Verify delete_client_check_mode_confirm is changed
  assert:
    that:
      - delete_client_check_mode_confirm is changed

- name: Fail when using invalid login
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1666'
    user: bruno1
    charset: auto
    password: ''
  register: create_client_invalid_login
  ignore_errors: true

- name: Output create_client_invalid_login
  debug:
    var: create_client_invalid_login

- name: Verify create_client_invalid_login failed
  assert:
    that:
      - create_client_invalid_login.failed | bool

- name: Fail when using invalid port
  helix_core_client:
    state: present
    name: bruno_new_client
    description: 'New client for Bruno'
    host: workstation01
    root: /tmp/bruno_new_client
    view:
      - //depot/... //bruno_new_client/depot/...
    server: '1667'
    user: bruno
    charset: auto
    password: ''
  register: create_client_invalid_port
  ignore_errors: true

- name: Output create_client_invalid_port
  debug:
    var: create_client_invalid_port

- name: Verify create_client_invalid_port failed
  assert:
    that:
      - create_client_invalid_port.failed | bool
