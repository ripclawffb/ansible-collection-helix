# Test code for the Helix configurable module
# -*- coding: utf-8 -*-

# Copyright: (c) 2019, Asif Shaikh (@ripclawffb) <ripclaw_ffb@hotmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# - name: Install required lib
#   pip:
#     name: p4python
#     executable: pip3

- name: Set auth.id for any server id
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_set_configurable

- name: Output auth_set_configurable
  ansible.builtin.debug:
    var: auth_set_configurable

- name: Verify auth_set_configurable is changed
  ansible.builtin.assert:
    that:
      - auth_set_configurable is changed

- name: Set auth.id for any server id (idempotent)
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_set_configurable_idempotent

- name: Output auth_set_configurable_idempotent
  ansible.builtin.debug:
    var: auth_set_configurable_idempotent

- name: Verify auth_set_configurable_idempotent is not changed
  ansible.builtin.assert:
    that:
      - auth_set_configurable_idempotent is not changed

- name: Unset auth.id for any server id
  ripclawffb.helix_core.helix_core_configurable:
    state: absent
    name: auth.id
    value: master.1
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_unset_configurable

- name: Output auth_set_configurable
  ansible.builtin.debug:
    var: auth_set_configurable

- name: Verify auth_set_configurable is changed
  ansible.builtin.assert:
    that:
      - auth_set_configurable is changed

- name: Set auth.id for specific server (check mode)
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    serverid: master
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_set_serverid_configurable
  check_mode: true

- name: Output auth_set_serverid_configurable
  ansible.builtin.debug:
    var: auth_set_serverid_configurable

- name: Verify auth_set_serverid_configurable is changed
  ansible.builtin.assert:
    that:
      - auth_set_serverid_configurable is changed

- name: Set auth.id for specific server
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    serverid: master
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_set_serverid_configurable

- name: Output auth_set_serverid_configurable
  ansible.builtin.debug:
    var: auth_set_serverid_configurable

- name: Verify auth_set_serverid_configurable is changed
  ansible.builtin.assert:
    that:
      - auth_set_serverid_configurable is changed

- name: Unset auth.id for specific server id
  ripclawffb.helix_core.helix_core_configurable:
    state: absent
    name: auth.id
    value: master.1
    serverid: master
    p4port: '1666'
    p4user: bruno
    p4passwd: ''
    p4charset: auto
  register: auth_unset_serverid_configurable

- name: Output auth_unset_serverid_configurable
  ansible.builtin.debug:
    var: auth_unset_serverid_configurable

- name: Verify auth_unset_serverid_configurable is changed
  ansible.builtin.assert:
    that:
      - auth_unset_serverid_configurable is changed

- name: Fail when using invalid login
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    p4port: '1666'
    p4user: bruno1
    p4passwd: ''
    p4charset: none
  register: auth_set_invalid_login
  ignore_errors: true

- name: Output auth_set_invalid_login
  ansible.builtin.debug:
    var: auth_set_invalid_login

- name: Verify auth_set_invalid_login failed
  ansible.builtin.assert:
    that:
      - auth_set_invalid_login.failed | bool

- name: Fail when using invalid port
  ripclawffb.helix_core.helix_core_configurable:
    state: present
    name: auth.id
    value: master.1
    p4port: '1999'
    p4user: bruno1
    p4passwd: ''
    p4charset: none
  register: auth_set_invalid_port
  ignore_errors: true

- name: Output auth_set_invalid_port
  ansible.builtin.debug:
    var: auth_set_invalid_port

- name: Verify auth_set_invalid_port failed
  ansible.builtin.assert:
    that:
      - auth_set_invalid_port.failed | bool
