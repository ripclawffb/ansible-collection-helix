# Test code for the Helix configurable module
# -*- coding: utf-8 -*-

# Copyright: (c) 2019, Asif Shaikh (@ripclawffb) <ripclaw_ffb@hotmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Install required lib
  pip:
    name: p4python
    executable: pip3

- name: Create new group
  helix_core_group:
    state: present
    name: super_admins
    users:
       - bruno
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_group

- debug:
    var: create_group

- assert:
    that:
      - create_group is changed

- name: Create new group (idempotent)
  helix_core_group:
    state: present
    name: super_admins
    users:
        - bruno
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_group_idempotent

- debug:
    var: create_group_idempotent

- assert:
    that:
      - create_group_idempotent is not changed

- name: Delete a group
  helix_core_group:
    state: absent
    name: super_admins
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_group

- debug:
    var: delete_group

- assert:
    that:
      - delete_group is changed

- name: Delete a group (idempotent)
  helix_core_group:
    state: absent
    name: super_admins
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_group_idempotent

- debug:
    var: delete_group_idempotent

- assert:
    that:
      - delete_group_idempotent is not changed

- name: Create new group (check mode)
  helix_core_group:
    state: present
    name: new_group
    users:
      - bruno
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_group_check_mode
  check_mode: true

- debug:
    var: create_group_check_mode

- assert:
    that:
      - create_group_check_mode is changed

- name: Create new group (confirm check mode)
  helix_core_group:
    state: present
    name: new_group
    users:
      - bruno
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_group_check_mode_confirm

- debug:
    var: create_group_check_mode_confirm

- assert:
    that:
      - create_group_check_mode_confirm is changed

- name: Delete group (check mode)
  helix_core_group:
    state: absent
    name: new_group
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_group_check_mode
  check_mode: true

- debug:
    var: delete_group_check_mode

- assert:
    that:
      - delete_group_check_mode is changed

- name: Delete group (confirm check mode)
  helix_core_group:
    state: absent
    name: new_group
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_group_check_mode_confirm

- debug:
    var: delete_group_check_mode_confirm

- assert:
    that:
      - delete_group_check_mode_confirm is changed

- name: Fail when using invalid login
  helix_core_group:
    state: present
    name: new_group
    users:
      - bruno
    server: '1666'
    user: bruno1
    charset: auto
    password: ''
  register: create_group_invalid_login
  ignore_errors: true

- debug:
    var: create_group_invalid_login

- assert:
    that:
      - create_group_invalid_login.failed | bool

- name: Fail when using invalid port
  helix_core_user:
    state: present
    name: new_group
    users:
      - bruno
    server: '1667'
    user: bruno
    charset: auto
    password: ''
  register: create_group_invalid_port
  ignore_errors: true

- debug:
    var: create_group_invalid_port

- assert:
    that:
      - create_group_invalid_port.failed | bool
