# Test code for the Helix server module
# -*- coding: utf-8 -*-

# Copyright: (c) 2019, Asif Shaikh (@ripclawffb) <ripclaw_ffb@hotmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# - name: Install required lib
#   pip:
#     name: p4python
#     executable: pip3

- name: Create a new server spec
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: standard
    description: 'Created by root.'
    services: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_server_spec

- name: Output create_server_spec
  ansible.builtin.debug:
    var: create_server_spec

- name: Verify create_server_spec is changed
  ansible.builtin.assert:
    that:
      - create_server_spec is changed

- name: Create new server spec (idempotent)
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: standard
    description: 'Created by root.'
    services: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_server_idempotent

- name: Output create_server_idempotent
  ansible.builtin.debug:
    var: create_server_idempotent

- name: Verify create_server_idempotent is not changed
  ansible.builtin.assert:
    that:
      - create_server_idempotent is not changed

- name: Update server spec
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: standard
    description: 'Created by user.'
    services: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: update_server

- name: Output update_server
  ansible.builtin.debug:
    var: update_server

- name: Verify update_server is changed
  ansible.builtin.assert:
    that:
      - update_server is changed

- name: Update server spec (idempotent)
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: standard
    description: 'Created by user.'
    services: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: update_server_idempotent

- name: Output update_server_idempotent
  ansible.builtin.debug:
    var: update_server_idempotent

- name: Verify update_server_idempotent is not changed
  ansible.builtin.assert:
    that:
      - update_server_idempotent is not changed

- name: Delete a server spec
  ripclawffb.helix_core.helix_core_server:
    state: absent
    serverid: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_server_spec

- name: Output delete_server_spec
  ansible.builtin.debug:
    var: delete_server_spec

- name: Verify delete_server_spec is changed
  ansible.builtin.assert:
    that:
      - delete_server_spec is changed

- name: Delete a server (idempotent)
  ripclawffb.helix_core.helix_core_server:
    state: absent
    serverid: standard
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_server_idempotent

- name: Output delete_server_idempotent
  ansible.builtin.debug:
    var: delete_server_idempotent

- name: Verify delete_server_idempotent is not changed
  ansible.builtin.assert:
    that:
      - delete_server_idempotent is not changed

- name: Create filtered edge server (check mode)
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: edge_replica
    description: 'Created by root.'
    archivedatafilter:
      - //depot1/...
      - -//depot2/...
    clientdatafilter:
      - -//workstation1/...
    revisiondatafilter:
      - //depot1/...
      - -//depot2/...
    services: edge-server
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_server_check_mode
  check_mode: true

- name: Output create_server_check_mode
  ansible.builtin.debug:
    var: create_server_check_mode

- name: Verify create_server_check_mode is changed
  ansible.builtin.assert:
    that:
      - create_server_check_mode is changed

- name: Create filtered edge server (confirm check mode)
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: edge_replica
    description: 'Created by root.'
    archivedatafilter:
      - //depot1/...
      - -//depot2/...
    clientdatafilter:
      - -//workstation1/...
    revisiondatafilter:
      - //depot1/...
      - -//depot2/...
    services: edge-server
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: create_server_check_mode_confirm

- name: Output create_server_check_mode_confirm
  ansible.builtin.debug:
    var: create_server_check_mode_confirm

- name: Verify create_server_check_mode_confirm is changed
  ansible.builtin.assert:
    that:
      - create_server_check_mode_confirm is changed

- name: Update filtered edge server
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: edge_replica
    description: 'Created by root.'
    archivedatafilter:
      - //depot2/...
      - -//depot1/...
    clientdatafilter:
      - -//workstation1/...
    revisiondatafilter:
      - //depot1/...
      - -//depot2/...
    services: edge-server
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: update_edge_archivedata

- name: Output update_edge_archivedata
  ansible.builtin.debug:
    var: update_edge_archivedata

- name: Verify update_edge_archivedata is changed
  ansible.builtin.assert:
    that:
      - update_edge_archivedata is changed

- name: Delete filtered edge server (check mode)
  ripclawffb.helix_core.helix_core_server:
    state: absent
    serverid: edge_replica
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_server_check_mode
  check_mode: true

- name: Output delete_server_check_mode
  ansible.builtin.debug:
    var: delete_server_check_mode

- name: Verify delete_server_check_mode is changed
  ansible.builtin.assert:
    that:
      - delete_server_check_mode is changed

- name: Delete filtered edge server (confirm check mode)
  ripclawffb.helix_core.helix_core_server:
    state: absent
    serverid: edge_replica
    server: '1666'
    user: bruno
    charset: auto
    password: ''
  register: delete_server_check_mode_confirm

- name: Output delete_server_check_mode_confirm
  ansible.builtin.debug:
    var: delete_server_check_mode_confirm

- name: Verify delete_server_check_mode_confirm is changed
  ansible.builtin.assert:
    that:
      - delete_server_check_mode_confirm is changed

- name: Fail when using invalid login
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: edge_replica2
    description: 'Created by root.'
    services: edge-server
    server: '1666'
    user: bruno1
    charset: auto
    password: ''
  register: create_server_invalid_login
  ignore_errors: true

- name: Output create_server_invalid_login
  ansible.builtin.debug:
    var: create_server_invalid_login

- name: Verify create_server_invalid_login failed
  ansible.builtin.assert:
    that:
      - create_server_invalid_login.failed | bool

- name: Fail when using invalid port
  ripclawffb.helix_core.helix_core_server:
    state: present
    serverid: edge_replica2
    description: 'Created by root.'
    services: edge-server
    server: '1667'
    user: bruno
    charset: auto
    password: ''
  register: create_server_invalid_port
  ignore_errors: true

- name: Output create_server_invalid_port
  ansible.builtin.debug:
    var: create_server_invalid_port

- name: Verify create_server_invalid_port failed
  ansible.builtin.assert:
    that:
      - create_server_invalid_port.failed | bool
